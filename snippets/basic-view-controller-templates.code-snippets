{
  "Vista completa de <<objeto_plural>>": {
    "prefix": "basic_view",
    "body": [
      "<!-- INICIA: Subheader de la vista -->",
      "<div id=\"vue-app-subheader\" class=\"subheader py-2 py-lg-4 subheader-solid\" v-cloak>",
      "  <div class=\"container-fluid d-flex align-items-center justify-content-between flex-wrap flex-sm-nowrap\">",
      "    <div class=\"d-flex align-items-center flex-wrap mr-2\">",
      "      <h6 class=\"text-dark font-weight-bold mt-2 mb-2 mr-5\"> {{ \"${1:objeto_plural}\".charAt(0).toUpperCase() + \"${1}\".slice(1) }}</h6>",
      "      <div class=\"subheader-separator subheader-separator-ver mt-2 mb-2 mr-2 bg-gray-200\"></div>",
      "      <div class=\"d-flex align-items-center\">",
      "        <div class=\"ml-5\" style=\"width: 245px;\">",
      "          <div class=\"input-group input-group-sm\">",
      "            <input type=\"text\" placeholder=\"Buscar ${1}\" class=\"form-control\" v-model=\"busqueda\" v-on:keyup.enter=\"buscar()\">",
      "            <div class=\"input-group-append\">",
      "              <span class=\"input-group-text\"><i class=\"la la-search\"></i></span>",
      "            </div>",
      "          </div>",
      "        </div>",
      "        <a class=\"btn btn-primary btn-sm font-weight-bold btn-hover-bg-default ml-3\" style=\"cursor: pointer;\" @click=\"buscar\">Buscar</a>",
      "      </div>",
      "      <span id=\"kt_subheader_total\" class=\"text-dark-50 font-weight-bold ml-5\">",
      "        {{ total_de_${1} }} resultados",
      "      </span>",
      "    </div>",
      "    <div class=\"d-flex align-items-center\">",
      "      <a @click=\"show_modal_insertar()\" class=\"btn btn-primary font-weight-bold btn-sm px-4 font-size-base ml-2\" style=\"cursor: pointer;\">",
      "        Nuevo ${2:objeto_singular}",
      "      </a>",
      "    </div>",
      "  </div>",
      "</div>",
      "<!-- FIN: Subheader de la vista -->",
      "",
      "<!-- INICIA: Cuerpo de la vista -->",
      "<div id=\"vue-app\" class=\"content d-flex flex-column flex-column-fluid\" style=\"padding: 0px; position: relative; top: 5px;\">",
      "  <div class=\"d-flex flex-column-fluid\">",
      "    <div class=\"container-fluid\">",
      "      <div class=\"card card-custom\">",
      "        <div class=\"card-header flex-wrap border-0 pt-1 pb-0\" style=\"padding: 0.5em;\">",
      "          <div class=\"card-body table-responsive\">",
      "            <table id=\"datatable-${1}\" class=\"table table-separate table-head-custom table-checkable\">",
      "              <thead>",
      "                <tr>",
      "                  ${3:// template_ths}",
      "                  <th>Acciones</th>",
      "                </tr>",
      "              </thead>",
      "              <tbody>",
      "                <template v-if=\"lista_${1}.length > 0\">",
      "                  <tr role=\"row\" class=\"odd\" v-for=\"${2} in lista_${1}\">",
      "                    ${4:// template_tds}",
      "                    <td>",
      "                      <div class=\"btn-group dropdown\">",
      "                        <button type=\"button\" data-toggle=\"dropdown\" class=\"btn btn-sm btn-default btn-text-primary btn-hover-primary mr-2 dropdown-toggle\">Opciones</button>",
      "                        <div class=\"dropdown-menu\">",
      "                          <a class=\"dropdown-item\" @click=\"show_modal_editar(${2}.ID)\">Editar</a>",
      "                          <div class=\"dropdown-divider\"></div>",
      "                          <a class=\"dropdown-item\" @click=\"eliminar_registro(${2}.ID)\">Eliminar</a>",
      "                        </div>",
      "                      </div>",
      "                    </td>",
      "                  </tr>",
      "                </template>",
      "                <template v-else>",
      "                  <tr>",
      "                    <td colspan=\"14\" class=\"text-center\">",
      "                      <h2 class=\"text-dark-50 my-5\">No se han encontrado resultados.</h2>",
      "                      <h5 class=\"text-dark-50\"><i class=\"fa fa-info-circle\"></i> Asegúrese de limpiar los filtros de búsqueda</h5>",
      "                    </td>",
      "                  </tr>",
      "                </template>",
      "              </tbody>",
      "            </table>",
      "            <div v-if=\"lista_${1}.length > 0\" class=\"col-12\">",
      "              <!--begin::Pagination-->",
      "              <div class=\"d-flex justify-content-between align-items-center flex-wrap\" style=\"float: right;\">",
      "                <div class=\"d-flex flex-wrap py-2 mr-3\">",
      "                  <div class=\"ml-2 my-auto\">Ver</div>",
      "                  <div class=\"mr-6 my-auto ml-3\" style=\"width: 110px;\">",
      "                    <select @change=\"cambiar_cantidad_registros\" class=\"form-control form-control-sm form-control-solid\" v-model=\"cantidad_${1}_elegida\">",
      "                      <option v-for=\"(item, index) in cantidades_de_registros\" :value=\"item\">{{ item }} registros</option>",
      "                    </select>",
      "                  </div>",
      "                  <a @click=\"mover_pagina(1)\" :class=\"(pagina_actual==1)?'disabled':''\" class=\"btn btn-icon btn-sm btn-light mr-2 my-1\">",
      "                    <i class=\"ki ki-bold-double-arrow-back icon-xs\"></i>",
      "                  </a>",
      "                  <a @click=\"mover_pagina(pagina_actual-1)\" :class=\"(pagina_actual==1)?'disabled':''\" class=\"btn btn-sm btn-light mr-2 my-1\">Anterior</a>",
      "                  <span class=\"text-muted ml-20 mr-20 mt-3\">Página {{pagina_actual}} de {{total_de_paginas}}</span>",
      "                  <a @click=\"mover_pagina(pagina_actual+1)\" :class=\"(pagina_actual==total_de_paginas)?'disabled':''\" class=\"btn btn-sm btn-light mr-2 my-1\">Siguiente</a>",
      "                  <a @click=\"mover_pagina(total_de_paginas)\" :class=\"(pagina_actual==total_de_paginas)?'disabled':''\" class=\"btn btn-icon btn-sm btn-light mr-2 my-1\">",
      "                    <i class=\"ki ki-bold-double-arrow-next icon-xs\"></i>",
      "                  </a>",
      "                </div>",
      "              </div>",
      "              <!--end::Pagination-->",
      "            </div>",
      "          </div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  </div>",
      "</div>",
      "<!-- FIN: Cuerpo de la vista -->",
      "",
      "<!-- INICIA: Modal para editar e insertar ${1} -->",
      "<div id=\"vue-modal-insertar-editar\" data-backdrop=\"static\" tabindex=\"-1\" role=\"dialog\" class=\"modal fade show\" aria-modal=\"true\">",
      "  <div role=\"document\" class=\"modal-dialog\">",
      "    <div class=\"modal-content\">",
      "      <div class=\"modal-header\">",
      "        <h5 id=\"modal-titulo\" class=\"modal-title\">Nuevo ${2}</h5>",
      "        <button type=\"button\" data-dismiss=\"modal\" class=\"close\">",
      "          <i class=\"ki ki-close\"></i>",
      "        </button>",
      "      </div>",
      "      <div class=\"modal-body\">",
      "        ${5:// template_modal}",
      "      </div>",
      "      <div class=\"modal-footer\">",
      "        <button type=\"button\" data-dismiss=\"modal\" class=\"btn btn-light-primary font-weight-bold\">Cerrar</button>",
      "        <button @click=\"guardar()\" type=\"button\" class=\"btn btn-primary font-weight-bold\">Guardar</button>",
      "      </div>",
      "    </div>",
      "  </div>",
      "</div>",
      "<!-- FIN: Modal para editar e insertar ${1} -->"
    ],
    "description": "Vista completa con subheader, tabla, paginación y modal para CRUD en Vue + Bootstrap"
  },
  "Controlador completo": {
    "prefix": "basic_controller",
    "body": [
      "axios.defaults.headers.common['token'] = GLOBAL_TOKEN;",
      "axios.defaults.headers.common['sesion'] = GLOBAL_SESION;",
      "",
      "var appSubheader = new Vue({",
      "    el: '#vue-app-subheader',",
      "    data: {",
      "        total_de_${1:objeto_plural}: '',",
      "        busqueda: ''",
      "    },",
      "    mounted: function(){",
      "        ",
      "    },",
      "    methods: {",
      "        buscar: async function () {",
      "            bloquear_elemento('body', '#000000', 0.2, null, null);",
      "            app.ir_inicio();",
      "            app.filtrar_${1:objeto_plural}();",
      "            desbloquear_elemento('body');",
      "        },",
      "        show_modal_insertar: function () {",
      "            appModal.limpiar_campos();",
      "            appModal.opcion = 'insertar';",
      "            $('#modal-titulo').html('Nuevo ${2:objeto_singular}');",
      "            $('#vue-modal-insertar-editar').modal('show');",
      "        }",
      "    },",
      "});",
      "",
      "var app = new Vue({",
      "    el: '#vue-app',",
      "    data: {",
      "        lista_${1:objeto_plural}: [],",
      "        cantidades_de_registros: [5, 10, 25, 50, 100],",
      "        total_de_paginas: null,",
      "        pagina_actual: 1,",
      "        cantidad_${1:objeto_plural}_elegida: 5,",
      "        cantidad_total_${1:objeto_plural}: 0,",
      "    },",
      "    mounted: function(){",
      "        this.get_total_${1:objeto_plural}();",
      "        this.filtrar_${1:objeto_plural}();",
      "    },",
      "    methods: {",
      "        get_total_${1:objeto_plural}: async function(){",
      "            let response = await axios.get(GLOBAL_APISERVER + '/${3:ruta_de_endpoints}/obtener_${1:objeto_plural}_full/?busqueda=' + appSubheader.busqueda + '&pagina=' + null + '&registros_pagina=' + null);",
      "            this.cantidad_total_${1:objeto_plural} = parseInt(response.data.total);",
      "            appSubheader.total_de_${1:objeto_plural} = this.cantidad_total_${1:objeto_plural};",
      "            this.total_de_paginas = this.cantidad_${1:objeto_plural}_elegida ? Math.ceil(this.cantidad_total_${1:objeto_plural} / this.cantidad_${1:objeto_plural}_elegida) : 1;",
      "        },",
      "        filtrar_${1:objeto_plural}: async function(){",
      "            let response = await axios.get(GLOBAL_APISERVER + `/${3:ruta_de_endpoints}/obtener_${1:objeto_plural}_full/?busqueda=${appSubheader.busqueda}&pagina=${this.pagina_actual}&registros_pagina=${this.cantidad_${1:objeto_plural}_elegida}`);",
      "            if(response.data.response == 'success'){",
      "                this.lista_${1:objeto_plural} = response.data.data;",
      "            } else {",
      "                global_crear_swalfire_sin_accion(response.data.title, response.data.message, response.data.response, 'OK');",
      "            }",
      "        },",
      "        ir_inicio: async function(){",
      "            this.pagina_actual = 1;",
      "            await this.get_total_${1:objeto_plural}();",
      "        },",
      "        cambiar_cantidad_registros: async function(){",
      "            bloquear_elemento('body', '#000000', 0.2, null, null);",
      "            this.ir_inicio();",
      "            await this.filtrar_${1:objeto_plural}();",
      "            desbloquear_elemento('body');",
      "        },",
      "        mover_pagina: async function(_p){",
      "            bloquear_elemento('body', '#000000', 0.2, null, null);",
      "            this.pagina_actual = _p;",
      "            await this.filtrar_${1:objeto_plural}();",
      "            desbloquear_elemento('body');",
      "        },",
      "        show_modal_editar: async function (_id) {",
      "            appModal.limpiar_campos();",
      "            let response = await axios.get(GLOBAL_APISERVER + '/${3:ruta_de_endpoints}/obtener_${2:objeto_singular}_por_id/?id=' + _id);",
      "            appModal.obj_${2:objeto_singular} = response.data.data;",
      "            appModal.opcion = 'editar';",
      "            $('#modal-titulo').html('Editar ${2:objeto_singular}');",
      "            $('#vue-modal-insertar-editar').modal('show');",
      "        },",
      "        eliminar_registro: function(_id){",
      "            let th = this;",
      "            Swal.fire({",
      "                title: '¿Estás seguro qué deseas eliminar este registro?',",
      "                text: 'Esta acción no se puede deshacer',",
      "                icon: 'warning',",
      "                showCancelButton: true,",
      "                confirmButtonText: 'Sí, deseo borrarlo'",
      "            }).then(function(result) {",
      "                if (result.value) {",
      "                    axios.delete(GLOBAL_APISERVER + '/${3:ruta_de_endpoints}/delete_${2:objeto_singular}/?id=' + _id)",
      "                    .then(async function(response){",
      "                        global_crear_swalfire_sin_accion(response.data.title, response.data.message, response.data.response, 'OK');",
      "                        th.ir_inicio();",
      "                        await th.filtrar_${1:objeto_plural}();",
      "                    })",
      "                    .catch(function(error){ console.log(error); });",
      "                }",
      "            });",
      "        }",
      "    }",
      "});",
      "",
      "var appModal = new Vue({",
      "    el: '#vue-modal-insertar-editar',",
      "    data: {",
      "        opcion: '',",
      "        obj_${2:objeto_singular}: {}",
      "    },",
      "    methods: {",
      "        guardar: function(){",
      "            let th = this;",
      "            let send_data = this.obj_${2:objeto_singular};",
      "            if (this.opcion == 'insertar'){",
      "                axios.post(GLOBAL_APISERVER + '/${3:ruta_de_endpoints}/insert_${2:objeto_singular}/', send_data)",
      "                .then(function(response){",
      "                    if(response.data.response === 'success'){",
      "                        Swal.fire({",
      "                            title: response.data.title,",
      "                            html: response.data.message,",
      "                            icon: response.data.response,",
      "                            comfirmButtonText: 'aceptar'",
      "                        }).then(async result => {",
      "                            app.ir_inicio();",
      "                            await app.filtrar_${1:objeto_plural}();",
      "                            if (result.isConfirmed) {",
      "                                $('#vue-modal-insertar-editar').modal('hide');",
      "                            }",
      "                        });",
      "                    }",
      "                })",
      "                .catch(function(error){ console.log(error); });",
      "            } else if (this.opcion == 'editar'){",
      "                axios.put(GLOBAL_APISERVER + '/${3:ruta_de_endpoints}/update_${2:objeto_singular}/', send_data)",
      "                .then(function(response){",
      "                    if(response.data.response === 'success'){",
      "                        Swal.fire({",
      "                            title: response.data.title,",
      "                            html: response.data.message,",
      "                            icon: response.data.response,",
      "                            comfirmButtonText: 'aceptar'",
      "                        }).then(async result => {",
      "                            app.ir_inicio();",
      "                            await app.filtrar_${1:objeto_plural}();",
      "                            if (result.isConfirmed) {",
      "                                $('#vue-modal-insertar-editar').modal('hide');",
      "                            }",
      "                        });",
      "                    }",
      "                })",
      "                .catch(function(error){ console.log(error); });",
      "            }",
      "        },",
      "        limpiar_campos: function(){",
      "            Object.keys(this.obj_${2:objeto_singular}).forEach(key => this.obj_${2:objeto_singular}[key] = '');",
      "        }",
      "    }",
      "});"
    ],
    "description": "Basic Vue Controller with Axios requests and Bootstrap modal support"
  }
}
