{
  "GET API Template": {
    "prefix": "getApi",
    "body": [
      "/*",
      " * endpoint: GET /${1:ruta_endpoint}/obtener_${2:objeto}/",
      " * output:  objeto JSON que describe un ${2:objeto}",
      "*/",
      "",
      "\\$router->map('GET', \"\\$entidad/${1:ruta_endpoint}/obtener_${2:objeto}/\", function(){",
      "    global \\$database, \\$INSTANCIA, \\$USUARIO;",
      "",
      "    \\$codigo_error = null;",
      "    \\$mensaje_error = null;",
      "    \\$tipo_error = null;",
      "",
      "    \\$respuesta = \\$database->action(function(\\$database) use (&\\$tipo_error, &\\$codigo_error, &\\$mensaje_error, \\$INSTANCIA, \\$USUARIO, &\\$${2:objeto})",
      "    {",
      "        \\$${2:objeto} = \\$database->select(\"${3:tabla_base}\", \"*\",",
      "                                                [",
      "                                                    \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                                    \"ARCHIVADO\" => 0",
      "                                                ]",
      "        );",
      "",
      "        \\$error_info = \\$database->error();",
      "        if (\\$error_info[2])",
      "        {",
      "           \\$codigo_error = \"BD-000000000 | \".\\$error_info[1];",
      "           \\$mensaje_error = \\$error_info[2];",
      "           \\$tipo_error = \"CONSULTA SQL\";",
      "           return false;",
      "        }",
      "",
      "        return true;",
      "    }, true);",
      "",
      "    if(!\\$mensaje_error)",
      "    {",
      "        \\$response = [",
      "                        \"response\" => \"success\",",
      "                        \"title\" => \"¡Datos obtenidos correctamente!\",",
      "                        \"message\" => \"Se han obtenido los datos correctamente\",",
      "                        \"data\" => \\$${2:objeto}",
      "                    ];",
      "    }",
      "    else",
      "    {",
      "        \\$respuesta_log_errores = \\$database->action(function(\\$database)use(&\\$id_error, &\\$codigo_error, &\\$mensaje_error, \\$tipo_error, \\$INSTANCIA, \\$USUARIO)",
      "        {",
      "            \\$database->insert(\"TBL_KUBOTIX_SOPORTE_LOG_ERRORES\",",
      "                                [",
      "                                    \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                    \"TIPO\" => \\$tipo_error,",
      "                                    \"CODIGO\" => \\$codigo_error,",
      "                                    \"DESCRIPCION\" => \\$mensaje_error,",
      "                                    \"RUTA_SERVICIO\" => \"GET::/obtener_${2:objeto}/\",",
      "                                    \"UBICACION_ARCHIVO\" => \"${4:nombre_archivo}.php\",",
      "                                    \"USUARIO_INCIDENCIA\" => \\$USUARIO",
      "                                ]",
      "            );",
      "",
      "            \\$error_info = \\$database->error();",
      "            if (\\$error_info[2])",
      "            {",
      "                \\$codigo_error = \\$error_info[1];",
      "                \\$mensaje_error = \\$error_info[2];",
      "                return false;",
      "            }",
      "",
      "            \\$id_error = \\$database->id();",
      "            return true;",
      "        },true);",
      "",
      "        if(\\$respuesta_log_errores)",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" =>  \"No se pudo obtener la información\",",
      "                            \"message\" => \"No se pudo obtener la información <br><br> <b> Contacte a su administrador o soporte y facilite el <u>número de seguimiento: </u> <span class='font-size-h4 text-dark'>\". \\$id_error . \"</span></b>\"",
      "                        ];",
      "        }",
      "        else",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" => \"No se pudo obtener la información\",",
      "                            \"message\" => \"No se pudo obtener la información. <br> CODIGO: <b>\".\\$codigo_error.\"</b> <br>Mensaje: <b>\".\\$mensaje_error.\"</b><br><strong> Contacte a su administrador o soporte y envie una captura del error </strong>\"",
      "                        ];",
      "        }",
      "    }",
      "",
      "    print_r(json_encode(\\$response));",
      "}, \\$entidad.\"_${1:ruta_endpoint}_obtener_${2:objeto}\");",
      ""
    ],
    "description": "Plantilla base para endpoint GET en una API con Medoo"
  },
  "POST API Template": {
    "prefix": "postApi",
    "body": [
      "/*",
      " * endpoint: POST /${1:ruta_endpoint}/insert_${2:objeto}/",
      " * input:   objeto JSON que describe un/una ${2:objeto} con los campos a insertar",
      " * output:  objeto JSON con el resultado de la operación",
      "*/",
      "",
      "\\$router->map('POST', \"\\$entidad/${1:ruta_endpoint}/insert_${2:objeto}/\", function(){",
      "    global \\$database, \\$INSTANCIA, \\$USUARIO;",
      "",
      "    \\$columnas_permitidas = [\"${3:nombres_columnas}\"];",
      "",
      "    \\$codigo_error = null;",
      "    \\$mensaje_error = null;",
      "    \\$tipo_error = null;",
      "",
      "    \\$json_${2:objeto} = file_get_contents(\"php://input\");",
      "    \\$insert_${2:objeto} = json_decode(\\$json_${2:objeto}, true);",
      "",
      "    \\$respuesta = \\$database->action(function(\\$database) use (&\\$tipo_error, &\\$codigo_error, &\\$mensaje_error, \\$INSTANCIA, \\$USUARIO, &\\$update_${2:objeto}, &\\$insert_${2:objeto}, &\\$columnas_permitidas, &\\$other_returns)",
      "    {",
      "        \\$keys = array_keys(\\$insert_${2:objeto});",
      "        if(array_diff(\\$keys, \\$columnas_permitidas))",
      "        {",
      "            \\$error_info = \\$database->error();",
      "            \\$codigo_error = \"ERR-000000000 | \". \\$error_info[1];",
      "            \\$mensaje_error = \"Se encontraron campos que no existen o no se permite insertar\";",
      "            \\$tipo_error = \"VALIDACIÓN DE PARÁMETROS\";",
      "            \\$other_returns[\"diff\"] = array_diff(\\$keys, \\$columnas_permitidas);",
      "            return false;",
      "        }",
      "",
      "        \\$insert_${2:objeto}[\"ID_INSTANCIA\"] = \\$INSTANCIA;",
      "        \\$insert_${2:objeto}[\"USUARIO_CREACION\"] = \\$USUARIO;",
      "",
      "        \\$data_insert = \\$database->insert(\"${4:tabla_base}\", \\$insert_${2:objeto});",
      "",
      "        \\$error_info = \\$database->error();",
      "        if(\\$error_info[2])",
      "        {",
      "            \\$codigo_error = \"BD-000000000 | \".\\$error_info[1];",
      "            \\$mensaje_error = \\$error_info[2];",
      "            \\$tipo_error = \"CONSULTA SQL\";",
      "            \\$other_returns[\"query\"] = \\$database->last();",
      "            return false;",
      "        }",
      "",
      "        \\$other_returns[\"count\"] = \\$data_insert->rowCount();",
      "        \\$other_returns[\"inserted\"] = \\$insert_${2:objeto};",
      "",
      "        return true;",
      "    }, true);",
      "",
      "    if(!\\$mensaje_error)",
      "    {",
      "        \\$response = [",
      "                        \"response\" => \"success\",",
      "                        \"title\" => \"¡Datos actualizados correctamente!\",",
      "                        \"message\" => \"Se ha(n) insertado \".\\$other_returns[\"count\"].\" registro(s)\",",
      "                        \"data\" => \\$other_returns",
      "                    ];",
      "    }",
      "    else",
      "    {",
      "        \\$respuesta_log_errores = \\$database->action(function(\\$database)use(&\\$id_error, &\\$codigo_error, &\\$mensaje_error, \\$tipo_error, \\$INSTANCIA, \\$USUARIO)",
      "        {",
      "            \\$database->insert(\"TBL_KUBOTIX_SOPORTE_LOG_ERRORES\",",
      "                                [",
      "                                    \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                    \"TIPO\" => \\$tipo_error,",
      "                                    \"CODIGO\" => \\$codigo_error,",
      "                                    \"DESCRIPCION\" => \\$mensaje_error,",
      "                                    \"RUTA_SERVICIO\" => \"POST::/insert_${2:objeto}/\",",
      "                                    \"UBICACION_ARCHIVO\" => \"${5:nombre_archivo}.php\",",
      "                                    \"USUARIO_INCIDENCIA\" => \\$USUARIO",
      "                                ]",
      "            );",
      "            \\$error_info = \\$database->error();",
      "            if (\\$error_info[2])",
      "            {",
      "                \\$codigo_error = \\$error_info[1];",
      "                \\$mensaje_error = \\$error_info[2];",
      "                return false;",
      "            }",
      "",
      "            \\$id_error = \\$database->id();",
      "            return true;",
      "        },true);",
      "",
      "        if(\\$respuesta_log_errores)",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" =>  \"No se pudo guardar la información\",",
      "                            \"message\" => \"No se pudo guardar la información <br><br> <b> Contacte a su administrador o soporte y facilite el <u>número de seguimiento: </u> <span class='font-size-h4 text-dark'>\". \\$id_error . \"</span></b>\"",
      "                           ];",
      "        }",
      "        else",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" => \"No se pudo guardar la información\",",
      "                            \"message\" => \"No se pudo guardar la información. <br> CODIGO: <b>\".\\$codigo_error.\"</b> <br>Mensaje: <b>\".\\$mensaje_error.\"</b><br><strong> Contacte a su administrador o soporte y envie una captura del error </strong>\"",
      "                           ];",
      "        }",
      "    }",
      "",
      "    print_r(json_encode(\\$response));",
      "}, \\$entidad.\"_${1:ruta_endpoint}_insert_${2:objeto}\");",
      ""
    ],
    "description": "Plantilla base para endpoint POST en una API con Medoo"
  },
  "PUT API Template": {
    "prefix": "putApi",
    "body": [
      "/*",
      " * endpoint: PUT /${1:ruta_endpoint}/update_${2:objeto}/",
      " * Actualiza un ${2:objeto} por su ID.",
      " * params:  objeto JSON que describe un ${2:objeto} con los campos que se requieran actualizar",
      " * output:  objeto JSON con el resultado del intento de actualización",
      "*/",
      "",
      "\\$router->map('PUT', \"\\$entidad/${1:ruta_endpoint}/update_${2:objeto}/\", function(){",
      "    global \\$database, \\$INSTANCIA, \\$USUARIO;",
      "",
      "    \\$columnas_permitidas = [\"${3:nombres_columnas}\"];",
      "",
      "    \\$codigo_error = null;",
      "    \\$mensaje_error = null;",
      "    \\$tipo_error = null;",
      "",
      "    \\$json_${2:objeto} = file_get_contents(\"php://input\");",
      "    \\$update_${2:objeto} = json_decode(\\$json_${2:objeto}, true);",
      "",
      "    \\$respuesta = \\$database->action(function(\\$database) use (&\\$tipo_error, &\\$codigo_error, &\\$mensaje_error, \\$INSTANCIA, \\$USUARIO, &\\$update_${2:objeto}, &\\$columnas_permitidas ,&\\$other_returns)",
      "    {",
      "        if(!isset(\\$update_${2:objeto}[\"ID\"]))",
      "        {",
      "            \\$codigo_error = \"ERR-000000000 | Falta campo ID\";",
      "            \\$mensaje_error = \"El endpoint requiere el campo ID para actualizar el registro\";",
      "            \\$tipo_error = \"VALIDACIÓN DE PARÁMETROS\";",
      "            return false;",
      "        }",
      "",
      "        \\$keys = array_keys(\\$update_${2:objeto});",
      "        if(array_diff(\\$keys, \\$columnas_permitidas))",
      "        {",
      "            \\$codigo_error = \"ERR-000000000 | Campo(s) no permitidos en el payload\";",
      "            \\$mensaje_error = \"Se encontraron campos que no existen o no se permite actualizarlos\";",
      "            \\$tipo_error = \"VALIDACIÓN DE PARÁMETROS\";",
      "            \\$other_returns[\"diff\"] = array_diff(\\$keys, \\$columnas_permitidas);",
      "            return false;",
      "        }",
      "",
      "        \\$existe = \\$database->has(\"${4:tabla_base}\",",
      "                                    [",
      "                                        \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                        \"ARCHIVADO\" => 0,",
      "                                        \"ID\" => \\$update_${2:objeto}[\"ID\"]",
      "                                    ]",
      "        );",
      "",
      "        if(!\\$existe)",
      "        {",
      "            \\$codigo_error = \"ERR-000000000 | Registro no encontrado\";",
      "            \\$mensaje_error = \"No existe un ${2:objeto} con este ID o no está vinculado con la instancia\";",
      "            \\$tipo_error = \"VALIDACIÓN DE PARÁMETROS\";",
      "            return false;",
      "        }",
      "",
      "        \\$data_update = \\$database->update(\"${4:tabla_base}\",",
      "                                            \\$update_${2:objeto},",
      "                                            [",
      "                                                \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                                \"ARCHIVADO\" => 0,",
      "                                                \"ID\" => \\$update_${2:objeto}[\"ID\"]",
      "                                            ]",
      "        );",
      "",
      "        \\$error_info = \\$database->error();",
      "        if(\\$error_info[2])",
      "        {",
      "            \\$codigo_error = \"BD-000000000 | \". \\$error_info[1];",
      "            \\$mensaje_error = \\$error_info[2];",
      "            \\$tipo_error = \"CONSULTA SQL\";",
      "            \\$other_returns[\"query\"] = \\$database->last();",
      "            return false;",
      "        }",
      "",
      "        \\$other_returns[\"count\"] = \\$data_update->rowCount();",
      "        \\$other_returns[\"updated\"] = \\$update_${2:objeto};",
      "",
      "        return true;",
      "    }, true);",
      "",
      "    if(!\\$mensaje_error)",
      "    {",
      "        \\$response = [",
      "                        \"response\" => \"success\",",
      "                        \"title\" => \"¡Datos actualizados correctamente!\",",
      "                        \"message\" => \"Se ha(n) actualizado \".\\$other_returns[\"count\"].\" registro(s)\",",
      "                        \"data\" => \\$other_returns",
      "                    ];",
      "    }",
      "    else",
      "    {",
      "        \\$respuesta_log_errores = \\$database->action(function(\\$database)use(&\\$id_error, &\\$codigo_error, &\\$mensaje_error, \\$tipo_error, \\$INSTANCIA, \\$USUARIO)",
      "        {",
      "            \\$database->insert(\"TBL_KUBOTIX_SOPORTE_LOG_ERRORES\",",
      "                                [",
      "                                    \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                    \"TIPO\" => \\$tipo_error,",
      "                                    \"CODIGO\" => \\$codigo_error,",
      "                                    \"DESCRIPCION\" => \\$mensaje_error,",
      "                                    \"RUTA_SERVICIO\" => \"PUT::/update_${2:objeto}/\",",
      "                                    \"UBICACION_ARCHIVO\" => \"${5:nombre_archivo}.php\",",
      "                                    \"USUARIO_INCIDENCIA\" => \\$USUARIO",
      "                                ]",
      "            );",
      "",
      "            \\$error_info = \\$database->error();",
      "            if(\\$error_info[2])",
      "            {",
      "                \\$codigo_error = \\$error_info[1];",
      "                \\$mensaje_error = \\$error_info[2];",
      "                return false;",
      "            }",
      "",
      "            \\$id_error = \\$database->id();",
      "            return true;",
      "        },true);",
      "",
      "        if(\\$respuesta_log_errores)",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" =>  \"No se pudo actualizar la información\",",
      "                            \"message\" => \"No se pudo actualizar la información <br><br> <b> Contacte a su administrador o soporte y facilite el <u>número de seguimiento: </u> <span class='font-size-h4 text-dark'>\". \\$id_error . \"</span></b>\"",
      "                        ];",
      "        }",
      "        else",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" => \"No se pudo actualizar la información\",",
      "                            \"message\" => \"No se pudo actualizar la información. <br> CODIGO: <b>\".\\$codigo_error.\"</b> <br>Mensaje: <b>\".\\$mensaje_error.\"</b><br><strong> Contacte a su administrador o soporte y envie una captura del error </strong>\"",
      "                        ];",
      "        }",
      "    }",
      "",
      "    print_r(json_encode(\\$response));",
      "}, \\$entidad.\"_${1:ruta_endpoint}_update_${2:objeto}\");",
      ""
    ],
    "description": "Plantilla base para endpoint PUT en una API con Medoo"
  },
  "DELETE API Template": {
    "prefix": "deleteApi",
    "body": [
      "/*",
      " * endpoint: DELETE /${1:ruta_endpoint}/delete_${2:objeto}/",
      " * Archiva un ${2:objeto}.",
      " * params:  id",
      " * output:  objeto JSON con el resultado del intento del borrado lógico",
      "*/",
      "",
      "\\$router->map('DELETE', \"\\$entidad/${1:ruta_endpoint}/delete_${2:objeto}/\", function(){",
      "    global \\$database, \\$INSTANCIA, \\$USUARIO;",
      "",
      "    \\$id = \\$_REQUEST[\"id\"]; // @param",
      "",
      "    \\$codigo_error = null;",
      "    \\$mensaje_error = null;",
      "    \\$tipo_error = null;",
      "",
      "    \\$respuesta = \\$database->action(function(\\$database) use (&\\$tipo_error, &\\$codigo_error, &\\$mensaje_error, \\$INSTANCIA, \\$USUARIO, \\$id, &\\$other_returns)",
      "    {",
      "        \\$existe = \\$database->has(\"${3:tabla_base}\",",
      "                                       [",
      "                                         \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                         \"ARCHIVADO\" => 0,",
      "                                         \"ID\" => \\$id",
      "                                       ]",
      "        );",
      "",
      "        if(!\\$existe)",
      "        {",
      "            \\$codigo_error = \"ERR-000000000 | Registro no encontrado\";",
      "            \\$mensaje_error = \"No existe un ${2:objeto} con este ID o no está vinculado con la instancia\";",
      "            \\$tipo_error = \"VALIDACIÓN DE PARÁMETROS\";",
      "            return false;",
      "        }",
      "",
      "        \\$data_update = \\$database->update(\"${3:tabla_base}\",",
      "                                            [",
      "                                                \"ARCHIVADO\" => 1",
      "                                            ],",
      "                                            [",
      "                                                \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                                \"ID\" => \\$id",
      "                                            ]",
      "        );",
      "",
      "        \\$error_info = \\$database->error();",
      "        if (\\$error_info[2])",
      "        {",
      "            \\$codigo_error = \"BD-000000000 | \".\\$error_info[1];",
      "            \\$mensaje_error = \\$error_info[2];",
      "            \\$tipo_error = \"CONSULTA SQL\";",
      "            \\$other_returns[\"query\"] = \\$database->last();",
      "            return false;",
      "        }",
      "",
      "        \\$other_returns[\"count\"] = \\$data_update->rowCount();",
      "        return true;",
      "    }, true);",
      "",
      "    if(!\\$mensaje_error)",
      "    {",
      "        \\$response = [",
      "                        \"response\" => \"success\",",
      "                        \"title\" => \"¡Datos eliminados correctamente!\",",
      "                        \"message\" => \"Se ha(n) eliminado \".\\$other_returns[\"count\"].\" registro(s)\",",
      "                        \"data\" => \\$other_returns",
      "                    ];",
      "    }",
      "    else",
      "    {",
      "        \\$respuesta_log_errores = \\$database->action(function(\\$database)use(&\\$id_error, &\\$codigo_error, &\\$mensaje_error, \\$tipo_error, \\$INSTANCIA, \\$USUARIO)",
      "        {",
      "            \\$database->insert(\"TBL_KUBOTIX_SOPORTE_LOG_ERRORES\",",
      "                                [",
      "                                    \"ID_INSTANCIA\" => \\$INSTANCIA,",
      "                                    \"TIPO\" => \\$tipo_error,",
      "                                    \"CODIGO\" => \\$codigo_error,",
      "                                    \"DESCRIPCION\" => \\$mensaje_error,",
      "                                    \"RUTA_SERVICIO\" => \"DELETE::/delete_${2:objeto}/\",",
      "                                    \"UBICACION_ARCHIVO\" => \"${4:nombre_archivo}.php\",",
      "                                    \"USUARIO_INCIDENCIA\" => \\$USUARIO",
      "                                ]",
      "            );",
      "",
      "            \\$error_info = \\$database->error();",
      "            if (\\$error_info[2])",
      "            {",
      "                \\$codigo_error = \\$error_info[1];",
      "                \\$mensaje_error = \\$error_info[2];",
      "                return false;",
      "            }",
      "",
      "            \\$id_error = \\$database->id();",
      "            return true;",
      "        },true);",
      "",
      "        if(\\$respuesta_log_errores)",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" =>  \"No se pudo eliminar la información\",",
      "                            \"message\" => \"No se pudo eliminar la información <br><br> <b> Contacte a su administrador o soporte y facilite el <u>número de seguimiento: </u> <span class='font-size-h4 text-dark'>\". \\$id_error . \"</span></b>\"",
      "                        ];",
      "        }",
      "        else",
      "        {",
      "            \\$response = [",
      "                            \"response\" => \"error\",",
      "                            \"title\" => \"No se pudo eliminar la información\",",
      "                            \"message\" => \"No se pudo eliminar la información. <br> CODIGO: <b>\".\\$codigo_error.\"</b> <br>Mensaje: <b>\".\\$mensaje_error.\"</b><br><strong> Contacte a su administrador o soporte y envie una captura del error </strong>\"",
      "                        ];",
      "        }",
      "    }",
      "",
      "    print_r(json_encode(\\$response));",
      "}, \\$entidad.\"_${1:ruta_endpoint}_delete_${2:objeto}\");",
      ""
    ],
    "description": "Plantilla base para endpoint DELETE en una API con Medoo"
  }
}
